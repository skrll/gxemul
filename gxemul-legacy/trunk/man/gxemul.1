.\" $Id: gxemul.1,v 1.15 2005-05-07 09:45:19 debug Exp $
.\"
.\" Copyright (C) 2004-2005  Anders Gavare.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" 
.\" 
.\" This is a minimal man page for GXemul. Process this file with
.\"     groff -man -Tascii gxemul.1    or    nroff -man gxemul.1
.\"
.Dd MAY 2005
.Dt GXEMUL 1
.Os
.Sh NAME
.Nm gxemul
.Nd an experimental machine emulator
.Sh SYNOPSIS
.Nm
.Op machine, other, and general options
.Op file Ar ...
.Nm
.Op general options
.Op Ar @configfile ...
.Nm
.Op userland, other, and general options
.Ar file Op Ar args ...
.Sh DESCRIPTION
.Nm
is an experimental instruction-level machine emulator. It can be used 
to run binary code for (among others) MIPS-based machines.
Several emulation modes are available. For some emulation modes, processors
and surrounding hardware components are emulated well enough to let
unmodified operating systems (eg NetBSD) run as if they were running on a
real machine.
.Pp
There are three ways to invoke the emulator. When emulating a 
complete machine, settings can be entered directly on the command line, or
they can be read from a configuration file. When emulating a userland 
environment (syscall-only emulation, not emulating complete machines), 
then the program name and its argument should be given on the command 
line.
.Pp
The easiest way to use the emulator is to supply settings directly on the 
command line. The most important thing you need to supply is the
file argument. This is the name of a binary file (an ELF, a.out, ECOFF,
SREC, or a raw binary image) which you wish to run in the emulator. This file
might be an operating system kernel, or perhaps a ROM image file.
.Pp
If more than one filename is supplied, all files are loaded into memory, 
and the entry point (if available) is taken from the last file.
.Pp
Apart from the name of a binary file, it is also necessary to select
which specific emulation mode to use. For example, a MIPS-based machine
from DEC (a DECstation) is very different from a MIPS-based machine
from SGI. Use
.Nm
.Fl H
to get a list of available emulation modes.
.Pp
(There is an exception to the normal invocation usage mentioned above;
if you want to use the DECstation emulation mode, and have a bootable
DECstation harddisk or CDROM image, then just supplying the diskimage via 
the
.Fl d
option is sufficient. The filename of the kernel can then be 
skipped, as the emulator runs the bootblocks from the diskimage directly and 
doesn't need the kernel as a separate file.)
.Pp
Machine selection options:
.Bl -tag -width Ds
.It Fl E Ar t
Try to emulate machine type
.Ar "t".
(Use
.Fl H
to get a list of types.)
.It Fl e Ar st
Try to emulate machine subtype
.Ar "st".
Use this together with
.Fl E .
(This option is not always needed, if a machine type has no subtypes.)
.El
.Pp
Other options:
.Bl -tag -width Ds
.It Fl B
Disable dynamic binary translation completely. By default, bintrans
will be turned on if the host architecture supports it.
However, in this release (0.3.X), there is no new bintrans system.
If you want to enable binary translation, use
.Fl "b".
.It Fl b
Use the OLD binary translation subsystem. (Alpha and i386 hosts only.)
.It Fl C Ar x
Try to emulate a specific CPU type,
.Ar "x".
This overrides the default CPU type for the machine being emulated.
(Use
.Fl H
to get a list of available CPU types.)
.It Fl d Ar name
Add
.Ar name
as a disk image. By adding one or more modifier characters and then a
colon (":") as a prefix to
.Ar "name",
you can modify the disk image's behaviour. Available modifiers are:
.Bl -tag -width Ds
.It b
Specifies that this is a boot device.
.It c
CD-ROM.
.It d
DISK (this is the default).
.It f
FLOPPY.
.It i
IDE.
.It r
Read-only (don't allow changes to be written to the file).
.It s
SCSI (this is the default for most machine types).
.It t
Tape.
.It 0-7
Force a specific SCSI ID number.
.El
.Pp
Filenames ending with ".iso" are assumed to be CDROM images. Files with a 
size of exactly 1.44 MB are assumed to be floppy images. All others
are assumed to be disks.
.It Fl I Ar x
Emulate clock interrupts at
.Ar x
Hz. (This affects emulated clock devices only, not actual runtime speed.
This disables automatic clock adjustments, which is otherwise turned on.)
(This option is probably only valid for DECstation emulation.)
.It Fl i
Display each instruction as it is being executed.
.It Fl J
Disable some speed tricks.
.It Fl j Ar n
Set the name of the kernel to
.Ar "n".
Useful names are "bsd" for OpenBSD/pmax, or "vmunix" for Ultrix.
("netbsd" is usually the default value.)
.It Fl M Ar m
Emulate
.Ar m
MBs of physical RAM. This overrides the default amount of RAM for the 
selected machine type.
.It Fl m Ar nr
Run at most
.Ar nr
instructions (on any cpu).
.It Fl N
Display nr of instructions/second average, at regular intervals.
.It Fl n Ar nr
Set nr of CPUs (for SMP experiments).
.It Fl O
Force a "netboot" (tftp instead of disk), even when a disk image is
present (for DECstation, SGI, and ARC emulation).
.It Fl o Ar arg
Set the boot argument (for DEC, ARC, or SGI emulation).
Default
.Ar arg
for DEC is '-a', for ARC '-aN'.
.It Fl p Ar pc
Add a breakpoint (remember to use the '0x' prefix for hex).
.It Fl Q
Disable the built-in PROM emulation. This is useful for running raw ROM
images from real machines.
.It Fl R
Use a random bootstrap cpu, instead of CPU nr 0. (For SMP experiments.)
.It Fl r
Dump register contents for every executed instruction.
.It Fl S
Initialize the emulated RAM to random data, instead of zeroes.
.It Fl T
Enter the single-step debugger on unimplemented memory accesses.
.It Fl t
Show a trace tree of all function calls being made.
.It Fl U
Enable slow_serial_interrupts_hack_for_linux.
.It Fl X
Use X11.
.It Fl x
Open up new xterms for emulated serial ports. (Default is to open up 
xterms when using configuration files, but not when starting an 
emulation with settings directly on the command line.)
.It Fl Y Ar n
Scale down framebuffer windows by
.Ar n
x
.Ar n
times.
.It Fl y Ar x
Set max_random_cycles_per_chunk to
.Ar x
(experimental).
.It Fl Z Ar n
Set the number of graphics cards, for emulating a dual-head or tripple-head
environment. (Only for DECstation emulation so far.)
.It Fl z Ar disp
Add
.Ar disp
as an X11 display to use for framebuffers.
.El
.Pp
Userland options:
.Bl -tag -width Ds
.It Fl u Ar emul-mode
Userland-only (syscall) emulation. (Use
.Fl H
to get a list of available emulation modes.) Some (but not all) of the
options listed under Other options above can also be used with userland
emulation.
.El
.Pp
General options:
.Bl -tag -width Ds
.It Fl D
Guarantee fully deterministic behaviour. Normally, the emulator calls
srandom() with a seed based on the current time at startup. When the
.Fl D
option is used, the srandom() call is skipped, which should cause two 
subsequent invokations of the emulator to be identical, if all other 
settings are identical. (If this option is used, then
.Fl I
must also be used.)
.It Fl H
Display a list of available CPU types, machine types, and userland
emulation modes. (Most of these don't work. Please read the documentation
included in the
.Nm
distribution for details on which modes that actually work.)
.It Fl h
Display a list of all available command line options.
.It Fl K
Force the single-step debugger to be entered at the end of a simulation.
.It Fl q
Quiet mode; this suppresses startup messages.
.It Fl s
Show opcode usage statistics after the simulation.
.It Fl V
Start up in the single-step debugger, paused.
.It Fl v
Verbose debug messages.
.El
.Pp
Configuration file startup:
.Bl -tag -width Ds
.It @ Ar configfile
Start an emulation based on the contents of
.Ar "configfile".
.El
.Pp
For more information, please read the documentation in the doc/
subdirectory of the
.Nm
distribution.
.Sh EXAMPLES
The following command will start NetBSD/pmax on an emulated DECstation 
5000/200 (3MAX), with the old bintrans system enabled:
.Pp
.Dl "gxemul -E dec -e 3max -b -d netbsddisk.img"
.Pp
netbsddisk.img should be a raw disk image containing a bootable 
NetBSD/pmax filesystem.
.Pp
The following command will start an emulation session based on settings in 
the configuration file "mysession". The -v option tells gxemul to be
verbose.
.Pp
.Dl "gxemul -v @mysession"
.Pp
If you have compiled the small Hello World program mentioned in the
.Nm
documentation, the following command will start up an
emulated test machine in "paused" mode:
.Pp
.Dl "gxemul -E testmips -V hello_mips"
.Pp
(Paused mode means that you enter the interactive single-step debugger
directly at startup, instead of launching the Hello World program.)
.Pp
Please read the documentation for more details.
.Sh BUGS
There are many bugs. Some of the known bugs are listed in the BUGS
file in the
.Nm
source distribution, some are indirectly mentioned in the TODO file.
.Pp
There is no new bintrans system in this release (0.3.1), so you will
need to add
.Fl b
to select the old bintrans system, if you want speed.
.Pp
.Nm
does not simulate individual pipe-line stages or penalties caused by
branch-prediction misses, so it cannot be used for accurate performance 
measurement.
.Sh AUTHOR
Anders Gavare <anders@gavare.se>
.Pp
See http://gavare.se/gxemul/ for more information.
