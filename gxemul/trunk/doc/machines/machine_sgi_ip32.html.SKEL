
The <tt>sgi_ip32</tt> machine template tries to emulate an
<a href="http://en.wikipedia.org/wiki/SGI_O2">SGI O2</a> machine,
for experiments with <a href="http://www.netbsd.org/ports/sgimips/">NetBSD/sgimips</a>,
<a href="http://openbsd.org/sgi.html">OpenBSD/sgi</a>, Linux for O2,
and possibly also SGI O2 PROMs and/or IRIX in the future.


<p><br>
<h3>Experimenting with a PROM from a real SGI O2:</h3>

This requires that you dump the PROM memory range from your real SGI O2
machine into a file. Using a serial console hooked up to your O2, executing
the PROM command
<pre>
	&gt;&gt; <b>dump -b 0xBFC00000:0xBFC80000</b>
</pre>
will dump 512 KB of the PROM range. Make sure you capture all the output
into a file, and then convert the result into a raw binary. (If you don't have
time to write a converter tool yourself, there is an example converter in
the GXemul source code distribution: <tt>experiments/sgiprom_to_bin</tt>.)

<p>
<font color="#ff0000">NOTE: RUNNING THE PROM DOES NOT WORK YET! These are preliminary
instructions on how it <i>may</i> work when the new GXemul framework, and the SGI O2
emulation in that framework, is complete enough.</font>

<p>Assuming you have extracted the PROM from your real machine into a
file called <tt>prom</tt>, the following example shows how to start up the
emulator in the paused state with the PROM image:

<pre>
$ <b>gxemul -V -e sgi_ip32 raw:0xffffffffbfc00000:prom</b>
GXemul (unknown version)      Copyright (C) 2003-2009  Anders Gavare

  mainbus0
  |-- ram0  (128 MB at offset 0)
  |-- prom0  (512 KB at offset 0x1fc00000)
  \-- cpu0  (R5000, 100 MHz)

cpu0: raw:0xffffffffbfc00000:prom loaded
      Raw file: entry point 0xffffffffbfc00000
      loadable chunk: vaddr 0xffffffffbfc00000, 524288 bytes

GXemul>
</pre>



<p><br><b>Legacy framework</b>

<p>As the new framework is not working yet, and especially the SGI O2
emulation mode in it, the following notes about the <i>legacy framework</i>
may also be of interest.

<p>In order to experiment with a raw PROM dump using the legacy framework,
the following command line may be used as a starting point:

<pre>
$ <b>gxemul -Q -X -e o2 0xbfc00000:prom</b>
</pre>

<p>-Q turns off GXemul's built-in PROM emulation, allowing raw PROM images
to be used. -X is used to display the graphical framebuffer. (-X can be
omitted if only serial console is what you want.) And finally, -e o2 selects
the emulation mode. 0xbfc00000 is the standard ROM address for MIPS-based
systems.

<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<a href="../sgi-o2-real.jpg"><img src="../sgi-o2-real_small.jpg"></a>
&nbsp;&nbsp;&nbsp;
<a href="../20050817-sgi-o2-success-7.png"><img src="../20050817-sgi-o2-success-7_small.png"></a>
&nbsp;&nbsp;&nbsp;
<a href="../20050817-sgi-o2-success-8.png"><img src="../20050817-sgi-o2-success-8_small.png"></a>

<p>The photo on the left is from the real machine. The other two are
screenshots of the PROM running experimentally in an older version of GXemul
from 2005, using <tt>-Y2</tt> framebuffer scaledown.

<p><font color="#ff0000">
NOTE: The SGI O2 PROM does some hardware tests during startup that fail in
GXemul, in particular cache detection. So right now (2018-09-10), it
can not boot without further intervention.</font>

<p>With a IP32 PROM version 4.13 for example, the cache detection routine
at 0xbfc05180 must be skipped:

<pre>
$ <b>gxemul -p 0xffffffffbfc05180 -X -Q -e o2 0xbfc00000:prom-4.13</b>

<i>...
when the breakpoint is hit, type:</i>

pc = ra
continue
</pre>

<p>This causes the PROM to output some messages to the serial port.
Setting the console environment variable to 'g' (for graphics), and
setting autoload to 'no', and then using the 'init' command to "reboot"
without leaving the debugger, will bring up the graphical boot screen:

<p>
<a href="../20180910-sgiip32prom-4.13.png">
<img src="../20180910-sgiip32prom-4.13.png" width=250>
</a>

<p>Note however that many devices do not work. The keyboard code has 
not been rewritten to the new interrupt framework, and SCSI is not
implemented for the SGI O2, so it is rather meaningless.

<p><hr>
</body>
</html>
